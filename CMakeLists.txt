cmake_minimum_required(VERSION 2.8)

PROJECT(dmci)

IF (WIN32)  
    MESSAGE(STATUS "Now is windows")  
    SET(DMOS_NAME "win") 
ELSEIF (APPLE)  
    MESSAGE(STATUS "Now is Apple systems.")  
    SET(DMOS_NAME "mac") 
ELSEIF (UNIX)  
    MESSAGE(STATUS "Now is UNIX-like OS's. Including Apple os x and CygWin") 
    SET(DMOS_NAME "lin") 
ENDIF ()

ADD_DEFINITIONS(-DUSE_DMPATH)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/include)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/test)

LINK_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/lib/${DMOS_NAME})

SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/bin)
SET(LIBRARY_OUTPUT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/lib/${DMOS_NAME})

FILE(GLOB_RECURSE SOURCES
${CMAKE_CURRENT_SOURCE_DIR}/src/*.c
${CMAKE_CURRENT_SOURCE_DIR}/src/*.cc
${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp)

ADD_EXECUTABLE(dmci ${SOURCES})
